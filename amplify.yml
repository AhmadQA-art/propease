version: 1
appRoot: frontend
frontend:
  phases:
    preBuild:
      commands:
        - "nvm install 20"
        - "nvm use 20"
        - "rm -rf node_modules"
        - "npm ci"
        - "mkdir -p frontend"
        - "echo 'module.exports = { plugins: {} };' > frontend/postcss.config.cjs"
    
    build:
      commands:
        - "export NODE_ENV=production"
        - "export VITE_API_URL=https://propease-backend-2-env.eba-mgfe8nm9.us-east-2.elasticbeanstalk.com"
        - "mkdir -p frontend"
        - "echo \"VITE_API_URL=$VITE_API_URL\" > frontend/.env.production.local"
        - |
          # Create vite.config.js file with explicit root path
          mkdir -p frontend
          cat > frontend/vite.config.js << 'EOL'
          import { defineConfig } from 'vite';
          import react from '@vitejs/plugin-react';
          import path from 'path';
          import { fileURLToPath } from 'url';

          const __dirname = path.dirname(fileURLToPath(import.meta.url));

          export default defineConfig({
            plugins: [react()],
            root: __dirname, // Set the root to frontend directory
            resolve: {
              alias: {
                '@': path.resolve(__dirname, './src'),
              },
            },
            build: {
              outDir: 'build',
            },
          });
          EOL
        - "mkdir -p frontend"
        - "rm -rf frontend/dist frontend/build || true"
        - "rm -rf build || true"  # Clean any build directory at root level
        - |
          # Build using workspace-aware command with explicit root
          echo "Building frontend with workspace command..."
          if [ ! -d "frontend" ]; then
            echo "Creating frontend directory..."
            mkdir -p frontend
          fi
          
          # Execute the build
          echo "Current directory: $(pwd)"
          echo "Listing node_modules/.bin:"
          ls -la node_modules/.bin/
          
          # Copy node_modules inside frontend if needed
          if [ ! -d "frontend/node_modules" ]; then
            echo "Creating frontend/node_modules symlink..."
            mkdir -p frontend/node_modules
            ln -sf ../node_modules/* frontend/node_modules/
          fi
          
          # Actually run the build directly in frontend directory
          echo "Running build in frontend directory..."
          cd frontend && npm run build || ../node_modules/.bin/vite build --mode production || npx vite build --mode production
          
          # Debug output
          echo "After build - Current directory: $(pwd)"
          ls -la
        - "pwd"
        - "ls -la"
        - |
          # CRITICAL: Copy build output from frontend/build to build at root level
          # This ensures artifacts are available in the baseDirectory location
          if [ -d "frontend/build" ]; then
            echo "Copying build artifacts from frontend/build to build at root level..."
            mkdir -p ../build
            cp -r build/* ../build/ || true
          fi
          
          # Exit frontend directory to get back to root
          cd ..
          
          # Verify the build artifacts exist at root level
          if [ -d "build" ]; then
            echo "Build artifacts successfully copied to root build directory"
            ls -la build
          else
            echo "ERROR: No build directory found at root level"
            pwd
            ls -la
          fi
        - "ls -la build || echo \"WARNING: build directory does not exist at root level!\""

  artifacts:
    baseDirectory: build
    files:
      - "**/*"

  cache:
    paths:
      - node_modules/**/*